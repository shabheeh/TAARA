
<%- include('../Layouts/Admin/header') -%>


    <!-- Vendors CSS -->
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/typeahead-js/typeahead.css" />
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/quill/typography.css">
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/quill/katex.css">
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/quill/editor.css">
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/select2/select2.css">
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/dropzone/dropzone.css">
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/flatpickr/flatpickr.css">
    <link rel="stylesheet" href="/Admin/assets/vendor/libs/tagify/tagify.css" />

    <!-- Page CSS -->


    <!-- Helpers -->
    <script src="/Admin/assets/vendor/js/helpers.js"></script>
    
    <script src="/Admin/assets/js/config.js"></script>


    <link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


    <style>
        .error-message {
            color: red !important;
        }
    </style>

    </head>

    <body>

        <%- include('../Layouts/Admin/navbar') -%>



            <!-- Content wrapper -->
            <div class="content-wrapper">

                <!-- Content -->

                <div class="container-xxl flex-grow-1 container-p-y">


                    <div class="app-ecommerce">
                        <form id="editVariantForm" enctype="multipart/form-data">
                            <!-- Add Product -->
                            <div class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-6 gap-4 gap-md-0">
                                <div class="d-flex flex-column justify-content-center">
                                    <h4 class="mb-1">Edit Variant</h4>
                                </div>
                                <div class="d-flex align-content-center flex-wrap gap-4">
                                    <!-- <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">Discard</button> -->
                                    <button type="submit" class="btn btn-primary">Update</button>
                                </div>
                            </div>
                            <p class="text-danger"><%= locals.message ? message : '' %></p>
                            <input type="hidden" id="variantId" name="variantId" value="<%= variant._id %>">
                        
                            <!-- First row for Variants -->
                            <div class="row">
                                <div class="col-12">
                                    <!-- Variants -->
                                    <div class="card mb-6">
                                        <div class="card-header">
                                            <h5 class="card-title mb-3">Variant</h5>
                                        </div>
                                        <div class="card-body">
                                            <div data-repeater-list="group-a">
                                                <div data-repeater-item>
                                                    <div class="row gx-5 align-items-center">
                                                        <div class="mb-6 col-4">
                                                            <div class="form-floating form-floating-outline">
                                                                <select id="variantColor" class="select2 form-select" name="productColor" data-placeholder="Color" data-allow-clear="true">
                                                                    <option value="">Color</option>
                                                                    <% 
                                                                    const colors = [
                                                                        { name: 'Black', code: '#000000' },
                                                                        { name: 'White', code: '#FFFFFF' },
                                                                        { name: 'Red', code: '#FF0000' },
                                                                        { name: 'Green', code: '#00FF00' },
                                                                        { name: 'Blue', code: '#0000FF' },
                                                                        { name: 'Yellow', code: '#FFFF00' },
                                                                        { name: 'Orange', code: '#FFA500' },
                                                                        { name: 'Purple', code: '#800080' },
                                                                        { name: 'Pink', code: '#FFC0CB' },
                                                                        { name: 'Brown', code: '#A52A2A' },
                                                                        { name: 'Gray', code: '#808080' },
                                                                        { name: 'Cyan', code: '#00FFFF' },
                                                                        { name: 'Magenta', code: '#FF00FF' },
                                                                        { name: 'Lime', code: '#00FF00' },
                                                                        { name: 'Maroon', code: '#800000' },
                                                                        { name: 'Navy', code: '#000080' },
                                                                        { name: 'Olive', code: '#808000' },
                                                                        { name: 'Teal', code: '#008080' },
                                                                        { name: 'Silver', code: '#C0C0C0' },
                                                                        { name: 'Gold', code: '#FFD700' },
                                                                        { name: 'Beige', code: '#F5F5DC' },
                                                                        { name: 'Salmon', code: '#FA8072' },
                                                                        { name: 'Turquoise', code: '#40E0D0' },
                                                                        { name: 'Indigo', code: '#4B0082' },
                                                                        { name: 'Violet', code: '#EE82EE' },
                                                                        { name: 'Coral', code: '#FF7F50' },
                                                                        { name: 'Khaki', code: '#F0E68C' },
                                                                        { name: 'Lavender', code: '#E6E6FA' },
                                                                        { name: 'Chocolate', code: '#D2691E' },
                                                                    ];
                                                                    colors.forEach(color => { %>
                                                                        <option value="<%= color.name %>" data-color-code="<%= color.code %>" <%= variant.color === color.name ? 'selected' : '' %>><%= color.name %></option>
                                                                    <% }) %>
                                                                </select>
                                                                <label for="variantColor" id="colorLabel">Color</label>
                                                            </div>
                                                            <input type="hidden" id="colorCode" name="colorCode" value="<%= variant.colorCode %>">
                                                        </div>
                                                        <div class="mb-6 col-4">
                                                            <div class="form-floating form-floating-outline">
                                                                <select id="variantSize" class="select2 form-select" data-placeholder="Size" data-allow-clear="true" name="productSizes[]" multiple="multiple">
                                                                    <% ['XS', 'S', 'M', 'L', 'XL'].forEach(size => { %>
                                                                        <option value="<%= size %>" <%= variant.sizes.includes(size) ? 'selected' : '' %>><%= size %></option>
                                                                    <% }) %>
                                                                </select>
                                                                <label for="variantSize" id="sizeLabel">Size</label>
                                                            </div>
                                                        </div>
                                                        <div class="mb-6 col-4">
                                                            <div class="form-floating form-floating-outline">
                                                                <input type="number" class="form-control form-control-sm" id="variantQuantity" value="<%= variant.quantity %>" placeholder="Add to Stock" name="productStock" aria-label="Add to Stock">
                                                                <label for="variantQuantity" id="quantityLabel">Quantity</label>
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                    <!-- /Variants -->
                                </div>
                            </div>
                        
                            <!-- Second row for Media -->
                            <div class="row">
                                <div class="col-12">
                                    <div class="card mb-6">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0 card-title" id="imageLabel">Product Images</h5>
                                        </div>
                                        <div class="card-body">
                                            <div class="form-group">
                                                <div class="row">
                                                    <% variant.images.forEach((image, i) => { %>
                                                        <div class="col-lg-3 col-md-6 mb-3 d-flex flex-column align-items-center">
                                                            <div class="rounded-image-preview mb-2" style="width: 257px; height: 361px;">
                                                                <img id="imagePreview<%= i + 1 %>" src="<%= '/Admin/assets/Products-Images/' + image %>" class="img-fluid" style="max-width: 100%; max-height: 100%;">
                                                            </div>
                                                            <label for="imageInput<%= i + 1 %>" class="btn btn-sm btn-outline-primary waves-effect">
                                                                Browse image
                                                            </label>
                                                            <input type="hidden" name="existingImage<%= i + 1 %>" value="<%= image %>">
                                                            <input name="productImage<%= i + 1 %>" type="file" accept="image/*" id="imageInput<%= i + 1 %>" class="imageInput" onchange="previewImage(this, 'imagePreview<%= i + 1 %>')" style="display: none;">
                                                        </div>
                                                    <% }) %>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <!-- /Second row -->
                        </form>
                        
                    </div>
                    


                </div>
                <!-- / Content -->







                <div class="content-backdrop fade"></div>
            </div>
            <!-- Content wrapper -->
            </div>
            <!-- / Layout page -->
            </div>



            <!-- Overlay -->
            <div class="layout-overlay layout-menu-toggle"></div>


            <!-- Drag Target Area To SlideIn Menu On Small Screens -->
            <div class="drag-target"></div>

            </div>
            <!-- / Layout wrapper -->




            <!-- Core JS -->
            <!-- build:js /Admin/assets/vendor/js/core.js -->
            <script src="/Admin/assets/vendor/libs/jquery/jquery.js"></script>
            <script src="/Admin/assets/vendor/libs/popper/popper.js"></script>
            <script src="/Admin/assets/vendor/js/bootstrap.js"></script>
            <script src="/Admin/assets/vendor/libs/node-waves/node-waves.js"></script>
            <script src="/Admin/assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
            <script src="/Admin/assets/vendor/libs/hammer/hammer.js"></script>
            <script src="/Admin/assets/vendor/libs/i18n/i18n.js"></script>
            <script src="/Admin/assets/vendor/libs/typeahead-js/typeahead.js"></script>
            <script src="/Admin/assets/vendor/js/menu.js"></script>

            <!-- endbuild -->

            <!-- Vendors JS -->
            <script src="/Admin/assets/vendor/libs/quill/katex.js"></script>
            <script src="/Admin/assets/vendor/libs/quill/quill.js"></script>
            <script src="/Admin/assets/vendor/libs/select2/select2.js"></script>
            <script src="/Admin/assets/vendor/libs/dropzone/dropzone.js"></script>
            <script src="/Admin/assets/vendor/libs/jquery-repeater/jquery-repeater.js"></script>
            <script src="/Admin/assets/vendor/libs/flatpickr/flatpickr.js"></script>
            <script src="/Admin/assets/vendor/libs/tagify/tagify.js"></script>

            <!-- Main JS -->
            <script src="/Admin/assets/js/main.js"></script>


            <!-- Page JS -->
            <script src="/Admin/assets/js/app-ecommerce-product-add.js"></script>


            <script>
                function previewImage(input, previewId) {
                        const file = input.files[0];
                        const reader = new FileReader();
                        reader.onload = function (e) {
                            const img = document.getElementById(previewId);
                            img.src = e.target.result;
                        };
                        reader.readAsDataURL(file);
                    }

                    document.getElementById('variantColor').addEventListener('change', function () {
                        const selectedOption = this.options[this.selectedIndex];
                        const colorCode = selectedOption.dataset.colorCode;
                        document.getElementById('colorCode').value = colorCode;
                    });
            </script>

            // <script>
            //     function previewImage(input, imageId) {
            //         const file = input.files[0];
            //         const reader = new FileReader();

            //         reader.onload = function (e) {
            //             const img = document.getElementById(imageId);
            //             img.src = e.target.result;
            //             createCropper(img);
            //             console.log(img);
            //         };

            //         if (file) {
            //             reader.readAsDataURL(file);
            //         }
            //     }

            //     function createCropper(img) {
            //         img.cropper = new Cropper(img, {
            //             aspectRatio: 1,
            //             viewMode: 3,
            //             preview: '.preview'
            //         });
            //     }

            //     function cropImage(button, imageId) {
            //             var img = document.getElementById(imageId);
            //             var cropper = img.cropper;

            //             cropper.getCroppedCanvas({
            //                 width: 200,
            //                 height: 200,
            //             }).toBlob(function (blob) {
            //                 var url = URL.createObjectURL(blob);
            //                 img.src = url;
            //                 cropper.destroy();
            //                 button.disabled = false;

            //                 // Create a new FormData object
            //                 var formData = new FormData();

            //                 // Create a new file object from the blob
            //                 var file = new File([blob], `croppedImage.jpg`, {
            //                     type: 'image/jpeg',
            //                 });

            //                 // Append the file to the FormData object
            //                 formData.append('croppedImage', file);

            //                 // Send the FormData object to the server
            //                 fetch('/admin/addProduct', {
            //                     method: 'POST',
            //                     body: formData,
            //                 })
            //                     .then(response => response.json())
            //                     .then(data => console.log(data))
            //                     .catch(error => console.error(error));
            //             });
            //         }
            // </script> 

// alert
            <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
            

            <script>
                $(document).ready(function () {
                    $('#size-select').select2({
                        placeholder: "Select Sizes",
                        allowClear: true
                    });
                });
            </script>

            <script>
                document.getElementById('editVariantForm').addEventListener('submit', function (event) {
                    event.preventDefault(); // Prevent form submission

                    // Clear previous error messages
                    // document.getElementById('imagesErr').style.display = 'none';

                    //  form fields
                    let isValid = true;
                    let variantId = document.getElementById('variantId').value.trim()
                    let variantColor = document.getElementById('variantColor').value.trim();
                    let variantColorCode = document.querySelector('#variantColor option:checked').dataset.colorCode;
                    let variantSize = $('#variantSize').val(); // For multi-select, use jQuery to get the value
                    let variantQuantity = document.getElementById('variantQuantity').value.trim();

                    //labels
                    const colorLabel = document.getElementById('colorLabel');
                    const sizeLabel = document.getElementById('sizeLabel');
                    const quantityLabel = document.getElementById('quantityLabel');

                    //images
                    const imageInputs = document.querySelectorAll('.imageInput');
                    const imagesLabel = document.getElementById('imagesLabel');



                    if (!variantColor) {
                        colorLabel.innerText = 'Color cannot be empty';
                        colorLabel.classList.add('error-message');
                        
                        isValid = false;
                    } else {
                        colorLabel.innerText = 'Color';
                        colorLabel.classList.remove('error-message');
                    }

                    if (!variantSize || variantSize.length === 0) {
                        sizeLabel.innerText = 'Size cannot be empty';
                        sizeLabel.classList.add('error-message');
                        isValid = false;
                    } else {
                        sizeLabel.innerText = 'Size';
                        sizeLabel.classList.remove('error-message');
                    }

                    if (!variantQuantity || isNaN(variantQuantity) || variantQuantity <= 0) {
                        quantityLabel.innerText = 'Invalid Quantity';
                        quantityLabel.classList.add('error-message');
                        isValid = false;
                    } else {
                        quantityLabel.innerText = 'Quantity';
                        quantityLabel.classList.remove('error-message');
                    }

                    



                    if (isValid) {
                        const formData = new FormData();
                        formData.append('variantId', variantId);
                        formData.append('variantColor', variantColor);
                        formData.append('variantColorCode', variantColorCode);
                        formData.append('variantSize', variantSize); // Converting array to JSON string
                        formData.append('variantQuantity', variantQuantity);

                        let imageCount = 0;
                        imageInputs.forEach((input, index) => {
                            if (input.files.length > 0) {
                            formData.append(`productImage${index + 1}`, input.files[0]);
                            } else {
                            formData.append(`existingImage${index + 1}`, document.querySelector(`input[name="existingImage${index + 1}"]`).value);
                            }
                        });


                        editVariant(formData);
                    }
                });


                function editVariant(data) {

                    fetch(`/admin/products/variants/editVariant`, {
                        method: 'PUT',
                
                        body: data
                    })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            // Show success alert
                            Swal.fire({
                                title: 'Success',
                                text: data.message,
                                icon: 'success',
                                confirmButtonColor: '#3085d6',
                                confirmButtonText: 'OK'
                            }).then((result) => {
                                if (result.isConfirmed) {
                                    console.log(data.id)
                                    window.location.href = `/admin/products/variants/single/${data.id}`

                                }
                            });
                        } else {
                            // Show error alert
                            Swal.fire({
                                title: 'Error',
                                text: data.message,
                                icon: 'error',
                                confirmButtonColor: '#d33',
                                confirmButtonText: 'OK'
                            });
                        }
                    })
                    .catch(error => {
                        console.error('Error:', error);
                        Swal.fire({
                            title: 'Error',
                            text: 'An error occurred while updating the variant.',
                            icon: 'error',
                            confirmButtonColor: '#d33',
                            confirmButtonText: 'OK'
                        });
                    });
                }

                function resetForm() {
                    document.getElementById('editVariantForm').reset();
                    $('.select2').val(null).trigger('change'); // Reset select2 fields
                    document.getElementById('imagesLabel').innerText = 'Product Images'
                    // Clear image previews
                    for (let i = 1; i <= 4; i++) {
                        document.getElementById(`imagePreview${i}`).src = '';
                    }
                }
            </script>



    </body>


    

    </html>

