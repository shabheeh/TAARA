<%- include('../Layouts/Admin/header') -%>

    
    <!-- Vendors CSS -->
    <link rel="stylesheet" href="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.css" />
    <link rel="stylesheet" href="assets/vendor/libs/typeahead-js/typeahead.css" /> 
    <link rel="stylesheet" href="assets/vendor/libs/quill/typography.css">
<link rel="stylesheet" href="assets/vendor/libs/quill/katex.css">
<link rel="stylesheet" href="assets/vendor/libs/quill/editor.css">
<link rel="stylesheet" href="assets/vendor/libs/select2/select2.css">
<link rel="stylesheet" href="assets/vendor/libs/dropzone/dropzone.css">
<link rel="stylesheet" href="assets/vendor/libs/flatpickr/flatpickr.css">
<link rel="stylesheet" href="assets/vendor/libs/tagify/tagify.css" />

    <!-- Page CSS -->
    

    <!-- Helpers -->
    <script src="assets/vendor/js/helpers.js"></script>
    <!--! Template customizer & Theme config files MUST be included after core stylesheets and helpers.js in the <head> section -->
    <!--? Template customizer: To hide customizer set displayCustomizer value false in config.js.  -->
    <!-- <script src="assets/vendor/js/template-customizer.js"></script> -->
    <!--? Config:  Mandatory theme config file contain global vars & default theme options, Set your preferred theme option in this file.  -->
    <script src="assets/js/config.js"></script>
    

<link href="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.css" rel="stylesheet">
<script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.12/cropper.min.js"></script>


<style>
  .error-message {
    color: red !important;
  }
</style>

</head>

<body>

<%- include('../Layouts/Admin/navbar') -%>

 

      <!-- Content wrapper -->
      <div class="content-wrapper">

        <!-- Content -->
        
          <div class="container-xxl flex-grow-1 container-p-y">
            
            
<div class="app-ecommerce">
  <form id="addProductForm" action="/admin/addProduct" method="POST" enctype="multipart/form-data">
    <!-- Add Product -->
    <div
      class="d-flex flex-column flex-md-row justify-content-between align-items-start align-items-md-center mb-6 gap-4 gap-md-0">
      <div class="d-flex flex-column justify-content-center">
        <h4 class="mb-1">Add a new Product</h4>
      </div>
      <div class="d-flex align-content-center flex-wrap gap-4">
        <button type="button" class="btn btn-outline-secondary" onclick="resetForm()">Discard</button>
        <button type="submit" class="btn btn-primary">Publish product</button>
      </div>
    </div>

    <div class="row">
      <!-- First column-->
      <div class="col-12 col-lg-8">
        <!-- Product Information -->
        <div class="card mb-6">
          <div class="card-header">
            <h5 class="card-tile mb-0">Product information</h5>
          </div>
          <div class="card-body">
            <div class="form-floating form-floating-outline mb-5">
              <input type="text" class="form-control" id="productName" placeholder="Product title" name="productName"
                aria-label="Product title">
              <label for="productName" id="nameLabel">Name</label>
            </div>

            <div class="row gx-5 mb-5">
              <div class="col">
                <div class="form-floating form-floating-outline">
                  <select id="productGender" name="productGender" class="select2 form-select" data-placeholder="Option"
                    data-allow-clear="true">
                    <option value="">Gender</option>
                    <option value="Men">Men</option>
                    <option value="Women">Women</option>
                  </select>
                  <label for="productGender" id="genderLabel">Gender</label>
                </div>
              </div>
              <div class="col">
                <div class="form-floating form-floating-outline">
                  <select id="productCategory" name="productCategory" class="select2 form-select" data-placeholder="Option"
                    data-allow-clear="true">
                    <option value="">Category</option>
                    <option value="Shirt">Shirt</option>
                    <option value="Saree">Saree</option>
                  </select>
                  <label for="productCategory" id="categoryLabel">Category</label>
                </div>
              </div>
            </div>

            <div class="form-floating form-floating-outline mb-5">
              <textarea class="form-control" id="productDescription" name="productDescription" placeholder="Enter product description"
                style="height: 253px;"></textarea>
              <label for="productDescription" id="descriptionLabel">Description</label>
            </div>
          </div>
        </div>
        <!-- /Product Information -->
      </div>
      <!-- /First column -->

      <!-- Second column -->
      <div class="col-12 col-lg-4">
        <!-- Pricing Card -->
        <div class="card mb-6">
          <div class="card-header">
            <h5 class="card-title mb-0">Pricing</h5>
          </div>
          <div class="card-body">
            <!-- Base Price -->
            <div class="form-floating form-floating-outline mb-5">
              <input type="number" class="form-control" id="productPrice" placeholder="Price" name="productPrice"
                aria-label="Product price">
              <label for="productPrice" id="priceLabel">Best Price</label>
            </div>
          </div>
        </div>
        <!-- /Pricing Card -->

        <!-- Variants -->
        <div class="card mb-6">
          <div class="card-header">
            <h5 class="card-title mb-3">Variant</h5>
          </div>
          <div class="card-body">
            <div data-repeater-list="group-a">
              <div data-repeater-item>
                <div class="row gx-5 align-items-center">
                  <div class="mb-6">
                    <div class="form-floating form-floating-outline">
                      <select id="variantColor" class="select2 form-select" name="productColor" data-placeholder="Color"
                        data-allow-clear="true">
                        <option value="">Color</option>
                        <option value="Black" data-color-code="#000000">Black</option>
                        <option value="White" data-color-code="#fff1f1">White</option>
                        <option value="Red" data-color-code="#FF0000">Red</option>
                        <option value="Green" data-color-code="#00FF00">Green</option>
                        <option value="Blue" data-color-code="#0000FF">Blue</option>
                        <option value="Yellow" data-color-code="#FFFF00">Yellow</option>
                        <option value="Orange" data-color-code="#FFA500">Orange</option>
                        <option value="Purple" data-color-code="#800080">Purple</option>
                        <option value="Pink" data-color-code="#FFC0CB">Pink</option>
                        <option value="Brown" data-color-code="#A52A2A">Brown</option>
                        <option value="Gray" data-color-code="#808080">Gray</option>
                        <option value="Cyan" data-color-code="#00FFFF">Cyan</option>
                        <option value="Magenta" data-color-code="#FF00FF">Magenta</option>
                        <option value="Lime" data-color-code="#00FF00">Lime</option>
                        <option value="Maroon" data-color-code="#800000">Maroon</option>
                        <option value="Navy" data-color-code="#000080">Navy</option>
                        <option value="Olive" data-color-code="#808000">Olive</option>
                        <option value="Teal" data-color-code="#008080">Teal</option>
                        <option value="Silver" data-color-code="#C0C0C0">Silver</option>
                        <option value="Gold" data-color-code="#FFD700">Gold</option>
                        <option value="Beige" data-color-code="#F5F5DC">Beige</option>
                        <option value="Salmon" data-color-code="#FA8072">Salmon</option>
                        <option value="Turquoise" data-color-code="#40E0D0">Turquoise</option>
                        <option value="Indigo" data-color-code="#4B0082">Indigo</option>
                        <option value="Violet" data-color-code="#EE82EE">Violet</option>
                        <option value="Coral" data-color-code="#FF7F50">Coral</option>
                        <option value="Khaki" data-color-code="#F0E68C">Khaki</option>
                        <option value="Lavender" data-color-code="#E6E6FA">Lavender</option>
                        <option value="Chocolate" data-color-code="#D2691E">Chocolate</option>
                      </select>
                      <label for="variantColor" id="colorLabel">Color</label>
                    </div>
                  </div>
                  <div class="mb-6">
                    <div class="form-floating form-floating-outline">
                      <select id="variantSize" class="select2 form-select" data-placeholder="Size" 
                        data-allow-clear="true" name="productSizes[]" multiple="multiple">
                        <option value="XS">Extra Small</option>
                        <option value="S">Small</option>
                        <option value="M">Medium</option>
                        <option value="L">Large</option>
                        <option value="XL">Extra Large</option>
                      </select>
                      <label for="variantSize" id="sizeLabel">Size</label>
                    </div>
                  </div>
                  <div class="mb-6">
                    <div class="form-floating form-floating-outline">
                      <input type="number" class="form-control form-control-sm" id="variantQuantity" 
                        placeholder="Add to Stock" name="productStock" aria-label="Add to Stock">
                      <label for="variantQuantity" id="quantityLabel">Quantity</label>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
        <!-- /Variants -->
      </div>
      <!-- /Second column -->
    </div>

    <!-- Media -->
      <div class="row">
        <div class="col-12">
          <div class="card mb-6">
            <div class="card-header d-flex justify-content-between align-items-center">
              <h5 class="mb-0 card-title">Product Images</h5>
            </div>
            <div class="card-body">
              <div class="form-group">
                <div class="row">
                  <div class="col-lg-3 col-md-6 mb-3 d-flex flex-column align-items-center">
                    <div class="rounded-image-preview mb-2" style="width: 200px; height: 300px;">
                      <img id="imagePreview1" class="img-fluid" style="max-width: 100%; max-height: 100%;">
                    </div>
                    <label for="imageInput1" class="btn btn-sm btn-outline-primary waves-effect">
                      Browse image
                    </label>
                    <input name="images" type="file" accept="image/*" id="imageInput1" class="imageInput"
                      onchange="previewImage(this, 'imagePreview1')" style="display: none;">
                    <button type="button" id="cropButton1" class="btn btn-sm btn-outline-primary waves-effect mt-3"
                      onclick="cropImage(this, 'imagePreview1')">Crop Image</button>
                  </div>
                  <div class="col-lg-3 col-md-6 mb-3 d-flex flex-column align-items-center">
                    <div class="rounded-image-preview mb-2" style="width: 200px; height: 200px;">
                      <img id="imagePreview2" class="img-fluid" style="max-width: 100%; max-height: 100%;">
                    </div>
                    <label for="imageInput2" class="btn btn-sm btn-outline-primary waves-effect">
                      Browse image
                    </label>
                    <input name="images" type="file" accept="image/*" id="imageInput2" class="imageInput"
                      onchange="previewImage(this, 'imagePreview2')" style="display: none;">
                    <button type="button" id="cropButton2" class="btn btn-sm btn-outline-primary waves-effect mt-3"
                      onclick="cropImage(this, 'imagePreview2')">Crop Image</button>
                  </div>
                  <div class="col-lg-3 col-md-6 mb-3 d-flex flex-column align-items-center">
                    <div class="rounded-image-preview mb-2" style="width: 200px; height: 200px;">
                      <img id="imagePreview3" class="img-fluid" style="max-width: 100%; max-height: 100%;">
                    </div>
                    <label for="imageInput3" class="btn btn-sm btn-outline-primary waves-effect">
                      Browse image
                    </label>
                    <input name="images" type="file" accept="image/*" id="imageInput3" class="imageInput"
                      onchange="previewImage(this, 'imagePreview3')" style="display: none;">
                    <button type="button" id="cropButton3" class="btn btn-sm btn-outline-primary waves-effect mt-3"
                      onclick="cropImage(this, 'imagePreview3')">Crop Image</button>
                  </div>
                  <div class="col-lg-3 col-md-6 mb-3 d-flex flex-column align-items-center">
                    <div class="rounded-image-preview mb-2" style="width: 200px; height: 200px;">
                      <img id="imagePreview4" class="img-fluid" style="max-width: 100%; max-height: 100%;">
                    </div>
                    <label for="imageInput4" class="btn btn-sm btn-outline-primary waves-effect">
                      Browse image
                    </label>
                    <input name="images" type="file" accept="image/*" id="imageInput4" class="imageInput"
                      onchange="previewImage(this, 'imagePreview4')" style="display: none;">
                    <button type="button" id="cropButton4" class="btn btn-sm btn-outline-primary waves-effect mt-3"
                      onclick="cropImage(this, 'imagePreview4')">Crop Image</button>
                  </div>
                </div>


                <p id="imagesErr" style="color: red; display: none;">Please upload exactly 4 images.</p>
              </div>
            </div>
          </div>
        </div>
      </div>
    <!-- /Media -->
  </form>
</div>


          </div>
          <!-- / Content -->

          
          



          
          <div class="content-backdrop fade"></div>
        </div>
        <!-- Content wrapper -->
      </div>
      <!-- / Layout page -->
    </div>

    
    
    <!-- Overlay -->
    <div class="layout-overlay layout-menu-toggle"></div>
    
    
    <!-- Drag Target Area To SlideIn Menu On Small Screens -->
    <div class="drag-target"></div>
    
  </div>
  <!-- / Layout wrapper -->


  

  <!-- Core JS -->
  <!-- build:js assets/vendor/js/core.js -->
  <script src="assets/vendor/libs/jquery/jquery.js"></script>
  <script src="assets/vendor/libs/popper/popper.js"></script>
  <script src="assets/vendor/js/bootstrap.js"></script>
  <script src="assets/vendor/libs/node-waves/node-waves.js"></script>
  <script src="assets/vendor/libs/perfect-scrollbar/perfect-scrollbar.js"></script>
  <script src="assets/vendor/libs/hammer/hammer.js"></script>
  <script src="assets/vendor/libs/i18n/i18n.js"></script>
  <script src="assets/vendor/libs/typeahead-js/typeahead.js"></script>
  <script src="assets/vendor/js/menu.js"></script>
  
  <!-- endbuild -->

  <!-- Vendors JS -->
  <script src="assets/vendor/libs/quill/katex.js"></script>
<script src="assets/vendor/libs/quill/quill.js"></script>
<script src="assets/vendor/libs/select2/select2.js"></script>
<script src="assets/vendor/libs/dropzone/dropzone.js"></script>
<script src="assets/vendor/libs/jquery-repeater/jquery-repeater.js"></script>
<script src="assets/vendor/libs/flatpickr/flatpickr.js"></script>
<script src="assets/vendor/libs/tagify/tagify.js"></script>

  <!-- Main JS -->
  <script src="assets/js/main.js"></script>
  

  <!-- Page JS -->
  <script src="assets/js/app-ecommerce-product-add.js"></script>


  <script src="https://cdnjs.cloudflare.com/ajax/libs/cropperjs/1.5.6/cropper.js"></script>


  <script>
    let croppers = [];

    function previewImage(input, imageId) {
      const file = input.files[0];
      const reader = new FileReader();

      reader.onload = function (e) {
        const img = document.getElementById(imageId);
        img.src = e.target.result;
        createCropper(img, imageId);
      };

      if (file) {
        reader.readAsDataURL(file);
      }
    }

    function createCropper(img, imageId) {
      // Destroy any existing cropper instance on the same image
      if (img.cropper) {
        img.cropper.destroy();
      }

      const cropper = new Cropper(img, {
        aspectRatio: 1,
        viewMode: 3,
        preview: '.preview'
      });
      img.cropper = cropper; // Store the cropper instance on the image element
      croppers.push({ img, cropper, imageId });
    }

    function cropImage(button, imageId) {
      const img = document.getElementById(imageId);
      const cropper = img.cropper;

      if (!cropper) {
        alert("Please select and preview an image first.");
        return;
      }

      cropper.getCroppedCanvas({
        width: 200,
        height: 200,
      }).toBlob(function (blob) {
        const url = URL.createObjectURL(blob);
        img.src = url;
        cropper.destroy();
        img.cropper = null;

        const input = document.getElementById(imageId.replace('Preview', 'Input'));
        input.croppedBlob = blob; // Store the cropped blob in the input element
        button.disabled = false;
      });
    }

    document.getElementById('addProductForm').addEventListener('submit', function (event) {
      event.preventDefault(); // Prevent form submission

      // Clear previous error messages
      document.getElementById('imagesErr').style.display = 'none';

      // Validate form fields
      let isValid = true;
      let productName = document.getElementById('productName').value.trim();
      let productGender = document.getElementById('productGender').value.trim();
      let productCategory = document.getElementById('productCategory').value.trim();
      let productDescription = document.getElementById('productDescription').value.trim();
      let productPrice = document.getElementById('productPrice').value.trim();
      let variantColor = document.getElementById('variantColor').value.trim();
      let variantSize = $('#variantSize').val(); // For multi-select, use jQuery to get the value
      let variantQuantity = document.getElementById('variantQuantity').value.trim();

      // Labels
      const nameLabel = document.getElementById('nameLabel');
      const genderLabel = document.getElementById('genderLabel');
      const categoryLabel = document.getElementById('categoryLabel');
      const descriptionLabel = document.getElementById('descriptionLabel');
      const priceLabel = document.getElementById('priceLabel');
      const colorLabel = document.getElementById('colorLabel');
      const sizeLabel = document.getElementById('sizeLabel');
      const quantityLabel = document.getElementById('quantityLabel');

      if (!productName) {
        nameLabel.innerText = 'Name cannot be empty';
        nameLabel.classList.add('error-message');
        isValid = false;
      }

      if (!productGender) {
        genderLabel.innerText = 'Gender cannot be empty';
        genderLabel.classList.add('error-message');
        isValid = false;
      }

      if (!productCategory) {
        categoryLabel.innerText = 'Category cannot be empty';
        categoryLabel.classList.add('error-message');
        isValid = false;
      }

      if (!productDescription) {
        descriptionLabel.innerText = 'Description cannot be empty';
        descriptionLabel.classList.add('error-message');
        isValid = false;
      }

      if (!productPrice || isNaN(productPrice) || productPrice <= 0) {
        priceLabel.innerText = 'Invalid Price';
        priceLabel.classList.add('error-message');
        isValid = false;
      }

      if (!variantColor) {
        colorLabel.innerText = 'Color cannot be empty';
        colorLabel.classList.add('error-message');
        isValid = false;
      }

      if (!variantSize || variantSize.length === 0) {
        sizeLabel.innerText = 'Size cannot be empty';
        sizeLabel.classList.add('error-message');
        isValid = false;
      }

      if (!variantQuantity || isNaN(variantQuantity) || variantQuantity <= 0) {
        quantityLabel.innerText = 'Invalid Quantity';
        quantityLabel.classList.add('error-message');
        isValid = false;
      }

      if (isValid) {
        // Prepare FormData
        const formData = new FormData(this);

        // Append cropped images to formData
        for (let i = 1; i <= 4; i++) {
          const input = document.getElementById(`imageInput${i}`);
          if (input.croppedBlob) {
            formData.append('images', input.croppedBlob, input.files[0]?.name || `image${i}.png`);
          }
        }

        // Submit the form data using fetch API
        fetch('/admin/addProduct', {
          method: 'POST',
          body: formData
        })
          .then(response => response.json())
          .then(data => {
            // Handle response
            if (data.success) {
              alert('Product added successfully');
              resetForm();
            } else {
              alert('Failed to add product');
            }
          })
          .catch(error => {
            console.error('Error:', error);
            alert('An error occurred');
          });
      }
    });

    function resetForm() {
      document.getElementById('addProductForm').reset();
      $('.select2').val(null).trigger('change'); // Reset select2 fields
      document.getElementById('imagesErr').style.display = 'none';
      // Clear image previews and croppers
      for (let i = 1; i <= 4; i++) {
        document.getElementById(`imagePreview${i}`).src = '';
        const input = document.getElementById(`imageInput${i}`);
        if (input.cropper) {
          input.cropper.destroy();
          input.cropper = null;
        }
        input.croppedBlob = null;
      }
    }
  </script>


  
  
</body>


<!-- Mirrored from demos.themeselection.com/materio-bootstrap-html-admin-template/html/vertical-menu-template/app-ecommerce-product-add.html by HTTrack Website Copier/3.x [XR&CO'2014], Tue, 25 Jun 2024 05:50:31 GMT -->
</html>

<!-- beautify ignore:end -->